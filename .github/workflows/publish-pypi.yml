name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.1.0, v1.2.0, etc.

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Run tests
      run: |
        python tests/test_btc_analyzer.py

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Extract version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Verify version matches
      run: |
        PACKAGE_VERSION=$(python -c "from bitcoin_dca.main import APP_VERSION; print(APP_VERSION)")
        TAG_VERSION="${{ steps.get_version.outputs.version }}"
        echo "Package version: $PACKAGE_VERSION"
        echo "Tag version: $TAG_VERSION"
        if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
          echo "ERROR: Version mismatch! Package: $PACKAGE_VERSION, Tag: $TAG_VERSION"
          exit 1
        fi
        echo "âœ… Version verification passed"
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: python -m twine check dist/*
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_TOKEN }}
        skip-existing: true  # Skip if version already exists